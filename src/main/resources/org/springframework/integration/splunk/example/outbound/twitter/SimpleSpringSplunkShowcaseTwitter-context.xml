<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-splunk="http://www.springframework.org/schema/integration/splunk"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:int-twitter="http://www.springframework.org/schema/integration/twitter"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/integration/splunk http://www.springframework.org/schema/integration/splunk/spring-integration-splunk.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/twitter http://www.springframework.org/schema/integration/twitter/spring-integration-twitter-2.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:property-placeholder location="classpath:twitter.properties" />

	<import resource="../../SplunkCommon-context.xml" />

	<bean id="twitterTemplate"
		class="org.springframework.social.twitter.api.impl.TwitterTemplate">
		<constructor-arg value="${twitter.oauth.consumerKey}" />
		<constructor-arg value="${twitter.oauth.consumerSecret}" />
		<constructor-arg value="${twitter.oauth.accessToken}" />
		<constructor-arg value="${twitter.oauth.accessTokenSecret}" />
	</bean>


	<int:channel id="input">
	     <int:interceptors>
	         <int:wire-tap channel="logger"/>
	     </int:interceptors>	
	</int:channel>
	
 	<int:logging-channel-adapter id="logger" level="INFO" 
 		expression="'from:' + payload.getFromUser() + ',source:' + payload.getSource() + ',twitter data:' + payload.getText()"/>
 	
	<int:channel id="output"/>

	<int-twitter:search-inbound-channel-adapter id="searchAdapter" channel="input"
												query="#voteobama OR #voteromney OR #votebieber">
		<int:poller fixed-rate="5000" max-messages-per-poll="50" />
	</int-twitter:search-inbound-channel-adapter>

	<int:chain input-channel="input" output-channel="outputToSplunk">
		<int:filter ref="tweetFilter"/>
		<int:transformer ref="splunkTransformer"/>
	</int:chain>



	<int-splunk:outbound-channel-adapter
		id="splunkOutboundChannelAdapter" auto-startup="true" order="1"
		channel="output" splunk-server-ref="splunkServer"	
		pool-server-connection="true" sourceType="twitter-integration" source="twitter"
		ingest="SUBMIT">
	</int-splunk:outbound-channel-adapter>
	
	
	<bean id="tweetFilter"
		class="org.springframework.integration.splunk.example.outbound.twitter.FromUserSelector">
		<property name="fromUsers">
			<list>
				<value>AP</value>
				<value>nytimes</value>
			</list>
		</property>
	</bean>

	<bean id="splunkTransformer"
		class="org.springframework.integration.splunk.example.outbound.twitter.TwitterToSplunkTransformer" />

</beans>
